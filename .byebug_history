continue
env['omniauth.auth'].info.nickname
env['omniauth.auth'].info
env['omniauth.auth'].take 1
env['omniauth.auth'].take
env['omniauth.auth'][1]
env['omniauth.auth'][0]
env['omniauth.auth'].login
env['omniauth.auth'].nickname
env['omniauth.auth']
env['omniauth']
user
continue
Rails.cache.read('recent')
continue
Rails.cache.read('recent')
@recent
next
@ratings

continue
next
city
url
continue
exit
HTTParty::perform_request Net::HTTP::Get, "#{url}#{Rack::Utils.escape(city)}"
HTTPart::perform_request Net::HTTP::Get, "#{url}#{Rack::Utils.escape(city)}"
perform_request Net::HTTP::Get, "#{url}#{Rack::Utils.escape(city)}"
perform_request Net::HTTP::Get "#{url}#{Rack::Utils.escape(city)}"
HTTParty.logger
HTTParty.debug_output
HTTParty.debugoutput
Foo.get "#{url}#{Rack::Utils.escape(city)}"
HTTParty
HTTParty.info
HTTParty.get
HTTParty.get "#{url}#{Rack::Utils.escape(city)}"
"#{url}#{Rack::Utils.escape(city)}"
url Rack::Utils.escape(city)
urlRack::Utils.escape(city)
Rack::Utils.escape(city)
city
response
continue
response
continue
response
continue
response
city
continue
HTTParty.get "#{url}"
HTTParty.get
HTTParty
"#{url}#{ERB::Util.url_encode(city)}"
HTTParty.get "#{url}#{ERB::Util.url_encode(city)}"
response
city
continue
exit
response
city
continue
city
response
continue
next
places
next
continue
@membership.beer_club
@membership
continue
@membership
@members
continue
next
Membership.find_by(user_id: current_user.id, beer_club: @beer_club.id)
@beer_club.members.include?(current_user)
current_user
continue
@already_member
next
continue
next
exit
@beer_club
next
@membership
next
continue
@beer_club
:beer_club_id
exit
BeerClub.all
@beer_club.name
@beer_club.id
@beer_club_id
@users_memberships.find_by(beer_club_id: @beer_club.id)
@users_memberships.find_by(beer_club_id == @beer_club.id)
@users_memberships.find_by(beer_club_id = @beer_club.id)
@users_memberships
users_memberships
continue
@error
continue
next
@error
error
eroor
continue
step
next
params[:rating][:score]
params[:rating]
 params
